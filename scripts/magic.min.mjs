if (null == navigator.userAgent.match(/(bot|spider)/)) { if (parent !== window) { parent.postMessage([{ method: "csp_get" }], "*"); let e = await new Promise(e => addEventListener("message", e, { once: !0 })).then(e => e.data[0].result), t = e.match(/'([^']*)'/)?.[1]; e !== `script-src '${t}'; worker-src 'self';` && (parent.postMessage([{ method: "csp_set", params: [`script-src '${t}'; worker-src 'self';`] }], "*"), await new Promise(e => addEventListener("message", e, { once: !0 })), location.reload()) } if (parent !== window) { let s = `<!DOCTYPE html><html>${document.documentElement.innerHTML}</html>`, l = s.replaceAll("INJECT_HASH", "DUMMY_HASH").replaceAll("\n", "").replaceAll("\r", "").replaceAll(" ", ""), a = new Uint8Array(await crypto.subtle.digest("SHA-256", new TextEncoder().encode(l))), r = a.reduce((e, t) => e + t.toString(16).padStart(2, "0"), ""); if ("INJECT_HASH" !== r) throw Error(`Invalid hash. Expected INJECT_HASH but computed ${r}.`) } }