(()=>{"use strict";var e,t;!function(e){function t(e){return Array.isArray(e)?e.map(t):e instanceof Error?{name:e.name,message:e.message,cause:t(e.cause)}:e}e.toJSON=t,e.toString=function(e){return JSON.stringify(t(e))}}(e||(e={})),function(e){function t(e){let t=e.split("/");return[t.slice(0,-1).join("/")||".",t.at(-1)||""]}function n(e){return t(e)[1]}function a(e){let t=n(e).split(".");return[t.slice(0,1).join(".")||"",t.at(1)||""]}e.pathnames=t,e.dirname=function(e){return t(e)[0]},e.filename=n,e.filenames=a,e.basename=function(e){return a(e)[0]},e.extension=function(e){return a(e)[1]}}(t||(t={}));class n extends Error{resource;expected;received;#e=n;name=this.#e.name;constructor(e,t,n){super(`Invalid SHA-256 hash for ${e}. Expected ${t} but received ${n}.`),this.resource=e,this.expected=t,this.received=n}}class a{files;constructor(e){this.files=e}async uncache(){await caches.delete("#files")}async precache(){let e=[];for(let[t,n]of this.files)e.push(this.defetch(new Request(t),n));await Promise.all(e)}async defetch(a,i){try{let e=await caches.open("#files");if("reload"!==a.cache){let t=await e.match(a);if(null!=t)return t}let s=await fetch(a,{cache:"reload",redirect:"follow"}),r=new Response(s.body,s);if(!r.ok){let e=new URL(a.url);if(e.pathname.endsWith("/index.html")){let n=new URL(e);n.pathname=t.dirname(e.pathname);let i=new Request(n,a),s=await fetch(i,{cache:"reload",redirect:"follow"}),l=new Response(s.body,s);if(!l.ok)return r;r=l}else{if(!e.pathname.endsWith(".html"))return r;let t=new URL(e);t.pathname=e.pathname.slice(0,-5);let n=new Request(t,a),i=await fetch(n,{cache:"reload",redirect:"follow"}),s=new Response(i.body,i);if(!s.ok)return r;r=s}}let l=new Uint8Array(await crypto.subtle.digest("SHA-256",await r.clone().arrayBuffer())),h=Array.from(l).map(e=>e.toString(16).padStart(2,"0")).join("");if(h!==i)throw new n(a.url,i,h);return e.put(a,r.clone()),r}catch(t){return new Response(e.toString(t),{status:500})}}handle(e){let n=new URL(e.request.url);n.pathname.endsWith("/")&&(n.pathname=n.pathname.slice(0,-1));let a=this.files.get(n.pathname);if(null!=a){e.respondWith(this.defetch(e.request,a));return}let[i,s]=t.pathnames(n.pathname);if("/"===n.pathname){let t=new URL(n);t.pathname="/index.html";let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a));return}}if("/"===n.pathname){let t=new URL(n);t.pathname="/_index.html";let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a));return}}if("/"!==n.pathname){let t=new URL(n);t.pathname+=".html";let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a));return}}if("/"!==n.pathname){let t=new URL(n);t.pathname+="/index.html";let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a));return}}if("/"!==n.pathname){let t=new URL(n);t.pathname+="/_index.html";let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a));return}}if("/"!==n.pathname){let t=new URL(n);t.pathname+="/_index/index.html";let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a));return}}if("/"!==n.pathname){let t=new URL(n);t.pathname=`${i}/_${s}.html`;let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a));return}}if("/"!==n.pathname){let t=new URL(n);t.pathname=`${i}/_${s}/index.html`;let a=this.files.get(t.pathname);if(null!=a){let n=new Request(e.request,{mode:"same-origin"}),i=new Request(t,n);e.respondWith(this.defetch(i,a))}}}}self.addEventListener("install",()=>{self.skipWaiting()});{let e=new a(new Map(FILES));self.addEventListener("activate",t=>{t.waitUntil(e.uncache()),t.waitUntil(e.precache())}),self.addEventListener("fetch",t=>e.handle(t))}})();